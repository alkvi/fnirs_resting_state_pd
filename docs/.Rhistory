View(redcap_data_parkmove)
measurement_dates <- read.csv(measurement_date_file)
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
measurement_dates <- read.csv(measurement_date_file)
View(measurement_dates)
measurement_dates <- read.csv(measurement_date_file, sep=";")
View(measurement_dates)
# Add measurment date
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$measurement_date_t1
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$year, "%Y")
measurement_dates$year
# Add measurment date
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y")
# Add measurment date
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
View(measurement_dates)
View(braph_right_subject_data)
View(braph_right_group_data)
View(redcap_data)
View(all_subject_data)
# Add diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
# Add diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- measurement_dates$crf_pd_year_phone - df$year
measurement_dates$disease_dur <- measurement_dates$crf_pd_year_phone - measurement_dates$year
# Add diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$crf_pd_year_phone) - as.numeric(measurement_dates$year)
# Add diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year)  as.numeric(measurement_dates$crf_pd_year_phone)
# Add diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
# Get disease duration via diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
braph_left_group <- "../data/braph_left_group_results.csv"
braph_left_subject <- "../data/braph_left_subject_results.csv"
braph_right_group <- "../data/braph_right_group_results.csv"
braph_right_subject <- "../data/braph_right_subject_results.csv"
redcap_file <- "../data/REDcap_data.csv"
updrs_file <- "../data/REDcap_data_updrs.csv"
# This file contains data from the 1st measurement, including diagnosis date
redcap_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/REDcap_data/All_REDcap_data.csv"
# This file has measurement date
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
# How handle correlations?
corr_method <- "spearman"
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total")]
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
View(all_subject_data)
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total")]
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
# Get disease duration via diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
measurement_dates <- measurement_dates[c("subject", "disease_dur")]
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
View(all_subject_data)
View(all_subject_data)
braph_left_group <- "../data/braph_left_group_results.csv"
braph_left_subject <- "../data/braph_left_subject_results.csv"
braph_right_group <- "../data/braph_right_group_results.csv"
braph_right_subject <- "../data/braph_right_subject_results.csv"
redcap_file <- "../data/REDcap_data.csv"
updrs_file <- "../data/REDcap_data_updrs.csv"
# This file contains data from the 1st measurement, including diagnosis date
redcap_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/REDcap_data/All_REDcap_data.csv"
# This file has measurement date
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
# How handle correlations?
corr_method <- "spearman"
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total")]
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
# Get disease duration via diagnosis date and measurement date
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
redcap_data_parkmove <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(redcap_data_parkmove, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
measurement_dates <- measurement_dates[c("subject", "disease_dur")]
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
# Assign group function
assign_group <- function(df) {
df$group <- case_when(
startsWith(df$subject, "FNP1") ~ "OA",
startsWith(df$subject, "FNP2") ~ "PD",
TRUE ~ NA_character_
)
df$group <- factor(df$group, levels=c('OA', 'PD'))
return(df)
}
all_subject_data <- assign_group(all_subject_data)
View(all_subject_data)
View(all_subject_data)
View(all_subject_data)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=10, fig.height=5)
# load library
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
library(forcats)
library(arsenal)
library(ggpubr)
library(ggplot2)
library(patchwork)
library(cowplot)
library(ggiraph)
library(ggpmisc)
library(gt)
library(gtExtras)
library(ggstatsplot)
library(knitr)
library(kableExtra)
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total", "frandin_grimby")]
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 0] <- 'No'
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total", "frandin_grimby", "ramlat_12_man")]
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 0] <- 'No'
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 1] <- 'Yes'
redcap_data$ramlat_12_man <- factor(redcap_data$ramlat_12_man, levels=c('No', 'Yes'))
View(redcap_data)
braph_left_group <- "../data/braph_left_group_results.csv"
braph_left_subject <- "../data/braph_left_subject_results.csv"
braph_right_group <- "../data/braph_right_group_results.csv"
braph_right_subject <- "../data/braph_right_subject_results.csv"
redcap_file <- "../data/REDcap_data.csv"
updrs_file <- "../data/REDcap_data_updrs.csv"
# This file contains data from the 1st measurement, including diagnosis date
redcap_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/REDcap_data/All_REDcap_data.csv"
# This file has measurement date
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
# How handle correlations?
corr_method <- "spearman"
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total", "frandin_grimby", "ramlat_12_man")]
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 0] <- 'No'
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 1] <- 'Yes'
redcap_data$ramlat_12_man <- factor(redcap_data$ramlat_12_man, levels=c('No', 'Yes'))
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
# Data from original study for demographics
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
# Get disease duration via diagnosis date and measurement date
diagnosis_data <- redcap_data_parkmove[c("id_nummer", "crf_pd_year_phone")]
# Get disease duration via diagnosis date and measurement date
diagnosis_data <- redcap_data_parkmove[c("subject", "crf_pd_year_phone")]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(diagnosis_data, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
measurement_dates <- measurement_dates[c("subject", "disease_dur")]
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
# Assign group function
assign_group <- function(df) {
df$group <- case_when(
startsWith(df$subject, "FNP1") ~ "OA",
startsWith(df$subject, "FNP2") ~ "PD",
TRUE ~ NA_character_
)
df$group <- factor(df$group, levels=c('OA', 'PD'))
return(df)
}
all_subject_data <- assign_group(all_subject_data)
View(all_subject_data)
demo_data_parkmove <- read.csv(demo_file_parkmove)
demo_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/basic_demographics.csv"
demo_data_parkmove <- read.csv(demo_file_parkmove)
View(demo_data_parkmove)
demo_data_parkmove <- read.csv(demo_file_parkmove)
demo_data_parkmove <- demo_data_parkmove[demo_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- read.csv(demo_file_parkmove)
demo_data_parkmove <- demo_data_parkmove[demo_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- demo_data_parkmove[c("subject", "sex", "age", "weight", "height")]
braph_left_group <- "../data/braph_left_group_results.csv"
braph_left_subject <- "../data/braph_left_subject_results.csv"
braph_right_group <- "../data/braph_right_group_results.csv"
braph_right_subject <- "../data/braph_right_subject_results.csv"
redcap_file <- "../data/REDcap_data.csv"
updrs_file <- "../data/REDcap_data_updrs.csv"
# This file contains data from the 1st measurement, including diagnosis date
redcap_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/REDcap_data/All_REDcap_data.csv"
demo_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/basic_demographics.csv"
# This file has measurement date
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
# How handle correlations?
corr_method <- "spearman"
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total", "frandin_grimby", "ramlat_12_man")]
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 0] <- 'No'
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 1] <- 'Yes'
redcap_data$ramlat_12_man <- factor(redcap_data$ramlat_12_man, levels=c('No', 'Yes'))
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
# Data from original study for demographics
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- read.csv(demo_file_parkmove)
demo_data_parkmove <- demo_data_parkmove[demo_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- demo_data_parkmove[c("subject", "sex", "age", "weight", "height")]
# Get disease duration via diagnosis date and measurement date
diagnosis_data <- redcap_data_parkmove[c("subject", "crf_pd_year_phone")]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(diagnosis_data, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
measurement_dates <- measurement_dates[c("subject", "disease_dur")]
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
# Add other demographics
all_subject_data <- merge(all_subject_data, demo_data_parkmove, by = "subject", all = TRUE)
# Assign group function
assign_group <- function(df) {
df$group <- case_when(
startsWith(df$subject, "FNP1") ~ "OA",
startsWith(df$subject, "FNP2") ~ "PD",
TRUE ~ NA_character_
)
df$group <- factor(df$group, levels=c('OA', 'PD'))
return(df)
}
all_subject_data <- assign_group(all_subject_data)
View(all_subject_data)
# Load and prepare all data
braph_left_group <- "../data/braph_left_group_results.csv"
braph_left_subject <- "../data/braph_left_subject_results.csv"
braph_right_group <- "../data/braph_right_group_results.csv"
braph_right_subject <- "../data/braph_right_subject_results.csv"
redcap_file <- "../data/REDcap_data.csv"
updrs_file <- "../data/REDcap_data_updrs.csv"
# This file contains data from the 1st measurement, including diagnosis date
redcap_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/REDcap_data/All_REDcap_data.csv"
demo_file_parkmove <- "../../Park-MOVE_fnirs_dataset_v2/basic_demographics.csv"
# This file has measurement date
measurement_date_file <- "../data/measurement_dates_rs_fnirs.csv"
# How handle correlations?
corr_method <- "spearman"
# Load the data files
braph_left_group_data <- read.csv(braph_left_group)
braph_left_subject_data <- read.csv(braph_left_subject)
braph_right_group_data <- read.csv(braph_right_group)
braph_right_subject_data <- read.csv(braph_right_subject)
redcap_data <- read.csv(redcap_file)
redcap_data <- redcap_data[c("id_nummer", "moca_sum", "moca_sum_adjusted", "mb_total", "led_total", "frandin_grimby", "ramlat_12_man")]
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 0] <- 'No'
redcap_data['ramlat_12_man'][redcap_data['ramlat_12_man'] == 1] <- 'Yes'
redcap_data$ramlat_12_man <- factor(redcap_data$ramlat_12_man, levels=c('No', 'Yes'))
updrs_data <- read.csv(updrs_file)
updrs_data$updrs_3_total <- rowSums(updrs_data[, 35:66], na.rm = TRUE)
updrs_data <- updrs_data[c("id_nummer", "updrs_3_total", "mdsupdrs3_hy")]
# Merge REDcap demographics data and UPDRS data
all_subject_data <- merge(redcap_data, updrs_data, by = "id_nummer", all = TRUE)
names(all_subject_data)[names(all_subject_data) == "id_nummer"] <- "subject"
# Make the subject names the same format
all_subject_data <- all_subject_data %>%
mutate(subject = gsub("_rs", "", subject))
# Data from original study for demographics
redcap_data_parkmove <- read.csv(redcap_file_parkmove)
names(redcap_data_parkmove)[names(redcap_data_parkmove) == "id_nummer"] <- "subject"
redcap_data_parkmove <- redcap_data_parkmove[redcap_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- read.csv(demo_file_parkmove)
demo_data_parkmove <- demo_data_parkmove[demo_data_parkmove$subject %in% all_subject_data$subject, ]
demo_data_parkmove <- demo_data_parkmove[c("subject", "sex", "age", "weight", "height")]
demo_data_parkmove['sex'][demo_data_parkmove['sex'] == 0] <- 'Male'
demo_data_parkmove['sex'][demo_data_parkmove['sex'] == 1] <- 'Female'
demo_data_parkmove$sex <- factor(demo_data_parkmove$sex, levels=c('Male', 'Female'))
# Get disease duration via diagnosis date and measurement date
diagnosis_data <- redcap_data_parkmove[c("subject", "crf_pd_year_phone")]
measurement_dates <- read.csv(measurement_date_file, sep=";")
measurement_dates$measurement_date_t1 <- as.Date(measurement_dates$measurement_date_t1, format = "%Y-%m-%d")
measurement_dates$year <- format(measurement_dates$measurement_date_t1, "%Y")
measurement_dates <- measurement_dates[c("subject", "year")]
measurement_dates <- merge(diagnosis_data, measurement_dates, by = "subject", all = TRUE)
measurement_dates$disease_dur <- as.numeric(measurement_dates$year) - as.numeric(measurement_dates$crf_pd_year_phone)
measurement_dates <- measurement_dates[c("subject", "disease_dur")]
all_subject_data <- merge(all_subject_data, measurement_dates, by = "subject", all = TRUE)
# Add other demographics
all_subject_data <- merge(all_subject_data, demo_data_parkmove, by = "subject", all = TRUE)
# Assign group function
assign_group <- function(df) {
df$group <- case_when(
startsWith(df$subject, "FNP1") ~ "OA",
startsWith(df$subject, "FNP2") ~ "PD",
TRUE ~ NA_character_
)
df$group <- factor(df$group, levels=c('OA', 'PD'))
return(df)
}
all_subject_data <- assign_group(all_subject_data)
View(braph_left_subject_data)
View(braph_left_group_data)
braph_left_group_data %>%
gt() %>%
cols_hide(columns = c("cil", "cui")) %>%
fmt_number(
columns = everything(),
decimals = 2
)
braph_left_group_data %>%
gt() %>%
cols_hide(columns = c("cil", "ciu")) %>%
fmt_number(
columns = everything(),
decimals = 2
)
fmt(
columns = c(p1, p2),
fns = function(x) {
ifelse(x < 0.001, "<0.001", sprintf("%.3f", x))
}
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_body(
rows = p2 < 0.05
)
)
braph_left_group_data %>%
gt() %>%
cols_hide(columns = c("cil", "ciu")) %>%
fmt_number(
columns = everything(),
decimals = 2
) %>%
fmt(
columns = c(p1, p2),
fns = function(x) {
ifelse(x < 0.001, "<0.001", sprintf("%.3f", x))
}
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_body(
rows = p2 < 0.05
)
)
braph_left_group_data <- braph_left_group_data[c("ch, hc_ec, pd_ec, diff, p1, p2")]
braph_left_group_data <- braph_left_group_data[c("ch", "hc_ec", "pd_ec", "diff", "p1", "p2")]
max(braph_left_group_data$pd_ec)
max(braph_left_group_data$hc_ec)
max(braph_right_group_data$pd_ec)
max(braph_right_group_data$hc_ec)
min(braph_left_group_data$pd_ec)
min(braph_left_group_data$hc_ec)
min(braph_right_group_data$pd_ec)
min(braph_right_group_data$hc_ec)
setwd("~/Project/fNIRS_projects/fnirs_resting_state_pd/docs")
